version: 2.1
commands:
  prepare_env:
    steps:
      - run: |
          sudo apt-get update
          sudo apt-get install -y python3-pip
          python3 -m venv venv
          . venv/bin/activate
          pip install --upgrade pip
          pip install --upgrade setuptools wheel twine build pytest pytest-cov ipython icecream

parameters:
  pypi_publish:
    type: string
    default: "false"
  testpypi_publish:
    type: string
    default: "false"

jobs:
  test:
    parameters:
      docker_version:
        type: string
    docker:
      - image: << parameters.docker_version >>
    steps:
      - checkout
      - prepare_env
      - run: |
          . venv/bin/activate
          pytest simpleregex/tests/
  pypi_publish:
    parameters:
      pypi_token:
        type: string
      destination:
        type: string
    steps:
      - checkout
      - prepare_env
      - run: |
          echo -e "[distutils]\nindex-servers =\n    <<parameters.destination>>\n\n[<<parameters.destination>>]\nusername = __token__\npassword = <<parameters.pypi_token>>" > ~/.pypirc
          . venv/bin/activate
          python3 -m build .
          python3 -m twine upload -r <<parameters.destination>> dist/* --verbose
    docker:
      - image: cimg/python:3.11

workflows:
  test:
    jobs:
      - test:
          matrix:
            parameters:
              docker_version: ["cimg/python:3.7", "cimg/python:3.8", "cimg/python:3.9", "cimg/python:3.10", "cimg/python:3.11"]
  test_and_testpypi_publish:
    when:
      or:
        - matches: { pattern: "true", value: << pipeline.parameters.testpypi_publish >> }
    jobs:
      - test:
          matrix:
            parameters:
              docker_version: [ "cimg/python:3.7", "cimg/python:3.8", "cimg/python:3.9", "cimg/python:3.10", "cimg/python:3.11" ]
      - testpypi_publish_hold:
          type: approval
          requires:
            - test
      - pypi_publish:
          name: testpypi_publish
          requires:
            - testpypi_publish_hold
          pypi_token: $TEST_PYPI_TOKEN
          destination: testpypi
  test_and_pypi_publish:
    when:
      or:
        - matches: { pattern: "true", value: << pipeline.parameters.pypi_publish >> }
    jobs:
      - test:
          matrix:
            parameters:
              docker_version: [ "cimg/python:3.7", "cimg/python:3.8", "cimg/python:3.9", "cimg/python:3.10", "cimg/python:3.11" ]
      - pypi_publish_hold:
          type: approval
          requires:
            - test
      - pypi_publish:
          requires:
            - pypi_publish_hold
          pypi_token: $PYPI_TOKEN
          destination: pypi
